This will be a breakdown of how to set up your Kali Linux machine for AWS Pentesting Practice. 

NOTE: You may only interact with your virtual instances. You cannot target other users instances or the AWS infrastructure. When in doubt contact AWS Support for more information.

Users should have an AWS account. This environment with be mostly free minus some charges AWS may make on your debit card. They refer to this as a "HOLD" that will be reimbursed as a discount on your monthly invoice. I recommend getting a Prepaid Debit card and put maybe $5 on it and add that as your form of payment.

Kali Linux:
Once in your AWS environment there will be a small section in the top left of the page that says "Services". Click this and select "Compute", then "EC2".
You will be redirected to a new page that will have a list of options, here you will select "Instances" and you will be redirected.
Here you will select Launch Instance in the upper right hand corner or in the center of the page.
You will be redirected to a new page to build out the instance. Here you can name the instance, select the image (Which will be Kali Linux), Instance Type, etc.
You will have to search for this particular image "Kali Linux" and it should be the first one. 
Once you select it, you will have to make modifications in order maintain a free instance. This can be done in Instance Type.
Develop a key pair.
Maintain Default values, except VPC, Subnet, and Security Group. Select the Subnet, VPC ID, and Security Group that is assigned to your other machines.
And you can Launch the instance.

Configuring OpenSSH
SSH into the Kali Machine using the .pem created
Set root password using 
  kali@kali:~$ sudo passwd
Edit the /etc/ssh/sshd_config file and set both of the following to yes
  PermitRootLogin
  Password Authentication
Edit /etc/ssh/ssh_config and uncomment:
  PasswordAuthentication
Restart SSH
  kali@kali:~$ sudo service ssh restart

Setting up Guacamole:
Install UFW and fail2ban:
  kali@kali:~$ sudo apt-get install ufw fail2ban

Allow ports 22 and port 55555
  kali@kali:~$ sudo ufw allow 22
  kali@kali:~$ sudo ufw allow 55555

In the EC2 Management Console add a new rule to the Security Group:
  Under Network & Security/Security Groups Create a New Inbound rule allowing traffic to port 55555

Install the Guacamole Prerequisites: Note the book is a bit outdated this is the up-to-date Tomcat available at the time of writing
  kali@kali:~$ sudo apt-get install build-essential htop libcairo2-dev libjpeg-dev libpng-dev libossp-uuid-dev tomcat9 freerdp2-dev libpango1.0-dev libssh2-1-dev libtelnet-dev libvncserver-dev libpulse-dev libssl-dev libvorbis-dev
  
Edit the Tomcat Server.xml file to use port 55555 instead of port 8080:
  kali@kali:~$ sudo nano /etc/tomcat9/server.xml
   <Connector port="55555" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443" />

Install RDP Services 
  kali@kali:~$ sudo apt install xrdp

Edit the Xwrapper.conf file to allow all users access to the RDP service:
  kali@kali:~$ sudo nano /etc/X11/Xwrapper.conf
  allowed_users=anybody 

Set the xrdp service to start automatically and enable the service:
  kali@kali:~$ sudo update-rc.d xrdp enable
  kali@kali:~$ sudo systemctl enable xrdp-sesman.service
  kali@kali:~$ sudo service xrdp start
  kali@kali:~$ sudo service xrdp-sesman start
  
Download the Guacamole .tar.gz and .war file
  kali@kali:~$ wget https://mirrors.estointernet.in/apache/guacamole/1.4.0/source/guacamole-server-1.4.0.tar.gz
  kali@kali:~$ wget https://mirrors.estointernet.in/apache/guacamole/1.4.0/binary/guacamole-1.4.0.war    

Extract the source:
  kali@kali:~$ sudo tar xvf guacamole-server-1.4.0.tar.gz



